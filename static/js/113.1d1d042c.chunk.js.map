{"version":3,"file":"static/js/113.1d1d042c.chunk.js","mappings":"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","sources":["webpack://post-tracking-test/./src/components/OfficeForm/OfficeForm.module.scss?63a3","components/OfficeForm/OfficeForm.jsx","webpack://post-tracking-test/./src/pages/postOffice/postOffice.module.scss?ed90","pages/postOffice/postOffice.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"office小ontainer\":\"OfficeForm_office小ontainer__8BcFs\",\"officeForm\":\"OfficeForm_officeForm__qPgjx\",\"inputContainer\":\"OfficeForm_inputContainer__XvF6G\",\"officeButton\":\"OfficeForm_officeButton__kun-1\",\"officeData\":\"OfficeForm_officeData__hJqs8\",\"officeList\":\"OfficeForm_officeList__uN7RR\",\"officePagination\":\"OfficeForm_officePagination__IXEvY\",\"officePaginationButton\":\"OfficeForm_officePaginationButton__Ce9bi\"};","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport css from \"./OfficeForm.module.scss\";\r\n\r\nconst OfficeForm = () => {\r\n  const [offices, setOffices] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const itemsPerPage = 10;\r\n\r\n  const fetchOffices = async (city, page) => {\r\n    try {\r\n      const response = await axios.post(process.env.REACT_APP_API_BASE_URL, {\r\n        apiKey: process.env.REACT_APP_API_KEY,\r\n        modelName: \"Address\",\r\n        calledMethod: \"getWarehouses\",\r\n        methodProperties: {\r\n          CityName: city,\r\n          Page: page.toString(),\r\n          Limit: itemsPerPage.toString(),\r\n          Language: \"UA\",\r\n          TypeOfWarehouseRef: \"\",\r\n          WarehouseId: \"\",\r\n        },\r\n      });\r\n\r\n      if (response.data.data.length === 0) {\r\n        toast.error(\"Please enter a valid request\");\r\n      }\r\n\r\n      setOffices(response.data.data);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cityName) {\r\n      fetchOffices(cityName, currentPage);\r\n    }\r\n  }, [currentPage, cityName]);\r\n\r\n  const onSubmit = async (values) => {\r\n    setCurrentPage(1);\r\n    setCityName(values.cityName);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage((prevPage) => prevPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.office小ontainer}>\r\n      <Formik initialValues={{ cityName: \"\" }} onSubmit={onSubmit}>\r\n        <Form className={css.officeForm}>\r\n          <div className={css.inputContainer}>\r\n            <Field\r\n              type=\"text\"\r\n              name=\"cityName\"\r\n              placeholder=\"Enter the name of the city in Ukrainian\"\r\n            />\r\n            <ErrorMessage\r\n              className={css.errorMessage}\r\n              name=\"cityName\"\r\n              component=\"div\"\r\n            />\r\n          </div>\r\n\r\n          <button className={css.officeButton} type=\"submit\">\r\n            Find\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n      {cityName && offices.length > 0 && (\r\n        <div className={css.officeData}>\r\n          <h3>Offices:</h3>\r\n          <ul className={css.officeList}>\r\n            {offices.map((office, index) => (\r\n              <li key={index}>\r\n                <p>{office.Description}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className={css.officePagination}>\r\n            <button\r\n              className={css.officePaginationButton}\r\n              onClick={handlePreviousPage}\r\n              disabled={currentPage === 1}\r\n            >\r\n              Previous page\r\n            </button>\r\n            <button\r\n              className={css.officePaginationButton}\r\n              onClick={handleNextPage}\r\n              disabled={offices.length === 0 || offices.length < itemsPerPage}\r\n            >\r\n              Next page\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <ToastContainer autoClose={3000} theme=\"colored\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OfficeForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"postOffice_container__f0eqx\"};","import OfficeForm from \"components/OfficeForm/OfficeForm\";\r\nimport css from \"./postOffice.module.scss\";\r\nconst PostOffice = () => {\r\n  return (\r\n    <div className={css.container}>\r\n      <OfficeForm></OfficeForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostOffice;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","offices","setOffices","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","cityName","setCityName","fetchOffices","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","city","page","response","wrap","_context","prev","next","axios","post","process","REACT_APP_API_BASE_URL","apiKey","modelName","calledMethod","methodProperties","CityName","Page","toString","Limit","Language","TypeOfWarehouseRef","WarehouseId","sent","data","length","toast","error","t0","console","message","stop","_x","_x2","apply","arguments","useEffect","onSubmit","_ref2","_callee2","values","_context2","_x3","_jsxs","className","css","office小ontainer","children","_jsx","Formik","initialValues","Form","officeForm","inputContainer","Field","type","name","placeholder","ErrorMessage","errorMessage","component","officeButton","officeData","officeList","map","office","index","Description","officePagination","officePaginationButton","onClick","prevPage","disabled","ToastContainer","autoClose","theme","OfficeForm"],"sourceRoot":""}